{"version":3,"sources":["Components/TaskForm.js","Components/Search.js","Components/Sort.js","Components/Control.js","Components/TaskItem.js","Components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["TaskForm","props","onCloseForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","onClear","status","id","this","task","nextProps","className","onClick","type","Component","Search","onSearch","keyword","placeholder","Sort","sortBy","sortValue","onSort","console","log","role","Control","TaskItem","onUpdateStatus","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","tasks","elmTasks","map","App","onToggelForm","isDisplayForm","taskEditing","onShowForm","data","generateID","push","findIndex","localStorage","setItem","JSON","stringify","result","forEach","splice","parseInt","filter","toLowerCase","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","sort","a","b","elmTaskForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be936f92.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TaskForm extends Component {\r\n\r\n      constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id:'',\r\n            name : '',\r\n            status : false\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        if(this.props.task){\r\n            this.setState({\r\n            id: this.props.task.id,\r\n            name : this.props.task.name,\r\n            status : this.props.task.status\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps && nextProps.task){\r\n            this.setState({\r\n            id: nextProps.task.id,\r\n            name : nextProps.task.name,\r\n            status : nextProps.task.status\r\n            });\r\n        }else if(!nextProps.task){\r\n            this.setState({\r\n                id:'',\r\n                name : '',\r\n                status : false\r\n            });\r\n        }\r\n    }\r\n\r\n    onCloseForm = () =>{\r\n         this.props.onCloseForm();   \r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        if( name === 'status'){\r\n            value=target.value === 'true' ? true : false;\r\n        }\r\n        this.setState({\r\n            [name] : value\r\n        }); \r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.onClear();\r\n        this.onCloseForm();\r\n    }\r\n    onClear = () => {\r\n        this.setState ({\r\n            name : '',\r\n            status : false\r\n        });\r\n    }\r\n\r\n    render(){\r\n        var{id} = this.state;\r\n        return (\r\n            <div className=\"panel panel-warning\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">\r\n                        { id !== '' ? 'Sửa Công việc' : 'Thêm Công Việc'}\r\n                        <span \r\n                            className=\"fa fa-times-circle text-right\"\r\n                            onClick={this.onCloseForm}\r\n                        >   \r\n                        </span>\r\n                    </h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Tên :</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"name\" \r\n                                value={this.state.name}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </div>\r\n                        <label>Trạng Thái :</label>\r\n                        <select \r\n                            className=\"form-control\" \r\n                            name=\"status\"\r\n                            value={this.state.status}\r\n                            onChange={this.onChange}\r\n                        >\r\n                            <option value=\"true\">Kích Hoạt</option>\r\n                            <option value=\"false\">Ẩn</option>\r\n                        </select><br/>\r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\">\r\n                                <span className=\"fa fa-plus mr-5\"></span>Lưu Lại\r\n                            </button>&nbsp;\r\n                            <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-danger\"\r\n                                onClick={this.onClear}\r\n                            >\r\n                                <span className=\"fa fa-close mr-5\"></span>Hủy Bỏ\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            keyword : ''\r\n        }\r\n    }\r\n\r\n    onChange = (event) =>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    onSearch = () =>{\r\n        this.props.onSearch(this.state.keyword);\r\n    }\r\n\r\n    render(){\r\n        var {keyword} = this.state; \r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"input-group\">\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"keyword\"  \r\n                        className=\"form-control\" \r\n                        placeholder=\"Nhập từ khóa...\"\r\n                        value={keyword}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <span className=\"input-group-btn\">\r\n                        <button \r\n                            className=\"btn btn-primary\" \r\n                            type=\"button\"\r\n                            onClick = {this.onSearch}\r\n                        >\r\n                            <span className=\"fa fa-search mr-5\"></span>\r\n                            Tìm\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\n\r\nclass Sort extends Component {\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        console.log(nextProps);\r\n    }\r\n\r\n    onClick = (sortBy, sortValue) => {\r\n        this.props.onSort(sortBy, sortValue);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                    <button \r\n                        className=\"btn btn-primary dropdown-toggle\" \r\n                        type=\"button\"  \r\n                        data-toggle=\"dropdown\" \r\n                        id=\"dropdownMenu1\"\r\n                        aria-haspopup=\"true\" \r\n                        aria-expanded=\"true\">\r\n                        Sắp Xếp \r\n                        <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li onClick = { () => this.onClick('name', 1)} >\r\n                            <a \r\n                                role=\"button\" \r\n                                className={(this.props.sortBy === 'name' && this.props.sortValue === 1 ? 'sort_selected' : '')}\r\n                            >\r\n                                <span className=\"fa fa-sort-alpha-asc pr-5\">Tên A-Z</span>\r\n                            </a>\r\n                        </li>\r\n                        <li onClick = { () => this.onClick('name', -1)}>\r\n                            <a \r\n                                role=\"button\" \r\n                                className={(this.props.sortBy === 'name' && this.props.sortValue === -1 ? 'sort_selected' : '')}\r\n                            >\r\n                                <span className=\"fa fa-sort-alpha-desc pr-5\">Tên Z-A</span>\r\n                            </a>\r\n                        </li>\r\n                        <li role=\"separator\" className=\"divider\"></li>\r\n                        <li onClick = { () => this.onClick('status', 1)}>\r\n                            <a \r\n                                role=\"button\" \r\n                                className={(this.props.sortBy === 'status' && this.props.sortValue === 1 ? 'sort_selected' : '')}\r\n                            >\r\n                                Trạng Thái Kích Hoạt\r\n                            </a>\r\n                        </li>\r\n                        <li onClick = { () => this.onClick('status', -1)}>\r\n                            <a \r\n                                role=\"button\" \r\n                                className={(this.props.sortBy === 'status' && this.props.sortValue === -1 ? 'sort_selected' : '')}\r\n                            >\r\n                                Trạng Thái Ẩn\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sort;","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nclass Control extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <Search onSearch = {this.props.onSearch} />\r\n                <Sort \r\n                    onSort = {this.props.onSort}\r\n                    sortBy = {this.props.sortBy}\r\n                    sortValue = {this.props.sortValue}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;","import React, { Component } from 'react';\r\n\r\nclass TaskItem extends Component {\r\n\r\n    onUpdateStatus = () => {\r\n        this.props.onUpdateStatus(this.props.task.id);\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.props.onDelete(this.props.task.id);\r\n    }\r\n    onUpdate = () => {\r\n        this.props.onUpdate(this.props.task.id);\r\n    }\r\n\r\n    render(){\r\n        var {task, index} = this.props;\r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{ task.name }</td>\r\n                <td className=\"text-center\">\r\n                    <span className={task.status === true ? 'label label-danger' :\r\n                        'label label-success'}\r\n                        onClick={this.onUpdateStatus}\r\n                    >\r\n                        {task.status === true ? 'Kích hoạt' : 'Ẩn'}\r\n                    </span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-warning\"\r\n                        onClick={this.onUpdate}\r\n                    >\r\n                        <span className=\"fa fa-pencil mr-5\"></span>Sửa\r\n                    </button>&nbsp;\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-danger\"\r\n                        onClick={this.onDelete}\r\n                    >\r\n                        <span className=\"fa fa-trash mr-5\"></span>Xóa\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\nclass TaskList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            filterName : '',\r\n            filterStatus : -1 //all 1 active 0 hiden\r\n        }\r\n    }\r\n\r\n    onChange = (event) =>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.props.onFilter(\r\n            name === 'filterName' ? value : this.state.filterName,\r\n            name === 'filterStatus' ? value : this.state.filterStatus,\r\n        )\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        var {tasks} = this.props;\r\n        var { filterName, filterStatus} = this.state;\r\n        var elmTasks = tasks.map((task, index) =>{\r\n            return <TaskItem \r\n                key={task.id} \r\n                index={index} \r\n                task={task}\r\n                onUpdateStatus={this.props.onUpdateStatus}\r\n                onDelete={this.props.onDelete}\r\n                onUpdate={this.props.onUpdate}\r\n                />\r\n        });\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <table className=\"table table-bordered table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\">STT</th>\r\n                                <th className=\"text-center\">Tên</th>\r\n                                <th className=\"text-center\">Trạng Thái</th>\r\n                                <th className=\"text-center\">Hành Động</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"filterName\"\r\n                                        value={ filterName}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <select \r\n                                        className=\"form-control\" \r\n                                        name=\"filterStatus\"\r\n                                        value={ filterStatus}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"-1\">Tất Cả</option>\r\n                                        <option value=\"0\">Ẩn</option>\r\n                                        <option value=\"1\">Kích Hoạt</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n                            {elmTasks}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './Components/TaskForm';\nimport Control from './Components/Control';\nimport TaskList from './Components/TaskList';\nimport {findIndex} from 'lodash';\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            tasks : [],\n            isDisplayForm : false,\n            taskEditing: null,\n            filter : {\n                name: '', \n                status: -1\n            },\n            keyword : '',\n            sortBy : 'name',\n            sortValue : 1\n        }\n    }\n\n    componentWillMount(){\n        if(localStorage && localStorage.getItem('tasks')){\n            var tasks = JSON.parse(localStorage.getItem('tasks'));\n            this.setState({\n                tasks : tasks\n            });\n        }\n    }\n\n    s4(){\n        return Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    generateID(){\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' \n                + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n    }\n\n    onToggelForm = () => {\n        if(this.state.isDisplayForm && this.state.taskEditing !== null){\n            this.setState({\n            isDisplayForm : true,\n            taskEditing : null\n            });\n        }else{\n            this.setState({\n            isDisplayForm : !this.state.isDisplayForm,\n            taskEditing : null\n            });\n        }\n    }\n    onCloseForm = () =>{\n        this.setState({\n            isDisplayForm : false\n        });\n    }\n\n    onShowForm = () =>{\n        this.setState({\n            isDisplayForm : true\n        });\n    }\n\n    onSubmit = (data) => {\n        var {tasks} = this.state;\n        if(data.id === ''){\n             data.id = this.generateID();\n            tasks.push(data);\n        }else{\n             var index = this.findIndex(data.id);\n             tasks[index] = data;\n        }\n        this.setState({\n            tasks : tasks,\n            taskEditing: null\n        });\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n    }\n\n    onUpdateStatus = (id) => {\n        var {tasks} = this.state;\n        var index = findIndex(tasks, (task) =>{\n            return task.id === id;\n        })\n        if(index !== -1){\n            tasks[index].status = !tasks[index].status;\n            this.setState({\n                tasks : tasks\n            });\n            localStorage.setItem('tasks',JSON.stringify(tasks));\n        }\n    }\n\n    findIndex = (id) =>{\n        var {tasks} = this.state;\n        var result= -1;\n        tasks.forEach((task,index) =>{\n            if(task.id === id){\n                result= index;\n            }\n        });\n        return result;\n    }\n\n    onDelete = (id) =>{\n        var {tasks} = this.state;\n        var index = this.findIndex(id);\n        if(index !== -1){\n            tasks.splice(index, 1);\n            this.setState({\n                tasks : tasks\n            });\n            localStorage.setItem('tasks',JSON.stringify(tasks));\n        }\n        this.onCloseForm();\n    }\n    onUpdate = (id) => {\n        var {tasks} = this.state;\n        var index = this.findIndex(id);\n        var  taskEditing = tasks[index];\n        this.setState({\n            taskEditing : taskEditing\n        });\n        this.onShowForm();\n    }\n\n    onFilter = (filterName, filterStatus) =>{\n        filterStatus = parseInt(filterStatus, 10);\n        this.setState({ \n            filter:{\n                name: filterName.toLowerCase(), \n                status: filterStatus\n            }\n        });\n    }\n\n    onSearch = (keyword) =>{\n         this.setState({\n            keyword : keyword\n        });\n    }\n\n    onSort = (sortBy, sortValue) =>{\n        this.setState({\n            sortBy : sortBy,\n            sortValue : sortValue\n        })\n        console.log(this.state);\n    }\n\n    render(){\n        var {\n                tasks, \n                isDisplayForm, \n                taskEditing, \n                filter, \n                keyword,\n                sortBy,\n                sortValue\n        } = this.state;\n        if(filter){\n            if(filter.name){\n                tasks = tasks.filter((task) => {\n                    return task.name.toLowerCase().indexOf(filter.name) !== -1;\n                });\n            }\n            tasks = tasks.filter((task) => {\n                if(filter.status === -1){\n                    return task;\n                }\n                else{\n                    return task.status === (filter.status === 1 ? true : false)\n                }\n            });        \n        }\n        if(keyword){\n            console.log(this.tasks);\n            tasks = tasks.filter((task) => {\n                return task.name.toLowerCase().indexOf(keyword) !== -1;\n            });\n        }\n        if(sortBy === 'name'){\n            tasks.sort((a,b) =>{\n                if(a.name > b.name){\n                    return sortValue;\n                } \n                else if(a.name < b.name) {\n                    return -sortValue;\n                }\n                else {\n                    return 0;\n                }\n            });\n        }\n        else{\n            tasks.sort((a,b) =>{\n                if(a.status > b.status){\n                    return -sortValue;\n                } \n                else if(a.status < b.status) {\n                    return sortValue;\n                }\n                else {\n                    return 0;\n                }\n            });\n        }\n        var elmTaskForm = isDisplayForm ? \n                <TaskForm \n                    onSubmit={this.onSubmit} \n                    onCloseForm={this.onCloseForm}\n                    task ={taskEditing}\n                /> : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n                        {elmTaskForm}\n                    </div>\n                    <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8': 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n                        <button \n                            type=\"button\" \n                            className=\"btn btn-primary\"\n                            onClick={this.onToggelForm}\n                        >\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Thêm Công Việc\n                        </button>\n                        <Control \n                            onSearch={this.onSearch}\n                            onSort = {this.onSort}\n                            sortBy={sortBy}\n                            sortValue={sortValue}\n                        />\n\n                        <TaskList \n                            tasks={tasks} \n                            onUpdateStatus={this.onUpdateStatus}\n                            onDelete={this.onDelete}\n                            onUpdate={this.onUpdate}\n                            onFilter={this.onFilter}\n                        />   \n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}